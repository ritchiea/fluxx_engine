-#Test data
-#-@spreadsheet_columns = [{:label => "Request ID", :attribute => "grant_or_request_id"}, {:label => "Status", :attribute => "state"}, {:label => "Amount Requested", :attribute => "amount_requested", :format => :currency}, {:label => "Amount Recommended", :attribute => "amount_recommended", :format => :currency}, {:label => "Grantee", :attribute => [:program_organization, :name]}, {:label => "Created", :attribute => "created_at", :format => :date}]

- if @skip_wrapper
  = render :partial => @markup,  :locals => {:models => @models}
- else
  #card-header
    = form_for :q, :url => current_index_path, :html => { :method => :get, :class => 'search listing-search' } do |f|
      = f.text_field :q, :value => (params[:q] ? params[:q][:q] : ''), :class => 'filter', :placeholder => 'Search...', :type => 'search'
    %ul.actions
      = render :partial => 'insta/list_actions',  :locals => {:models => @models, :model_class => @model_class, :view => :spreadsheet}

  #card-body
    .spreadsheet-view
      -if @markup
        = render :partial => @markup,  :locals => {:models => @models, :index_listing_display => true}
      -elsif @spreadsheet_columns
        %table.spreadsheet
          %thead
            %tr
              -@spreadsheet_columns.each do |col|
                %th= col[:label]
          %tbody
            -@models.each do |model|
              %tr
                -first = true
                -@spreadsheet_columns.each do |col|
                  -if col[:attribute].is_a? Array
                    -val = col[:attribute].inject(model){|acc, att| (acc = acc.send(att) rescue nil) if att} if col[:attribute]
                  -elsif col[:attribute]
                    -val = model.send col[:attribute]

                  -# Format value
                  -case col[:format]
                  -when :currency
                    -val = dollars_format val
                  -when :date
                    -val = mdy_date_format val
                  -when :integer
                    -val = val.to_i if val
                  -else
                    -val = val.is_a?(String) ? strip_tags(val).first(100) : val

                  -# Make the first column link out to a detail card for the model
                  -if first
                    -first = false
                    -val= link_to val, current_show_path(model.id), :class => "new-detail", 'data-insert' => 'after'

                  -# Present the state progression modal when clicking on the state column
                  -if col[:attribute].to_s == "state"
                    -state = model.state_to_english
                    -val= link_to((state.empty? ? model.state : state),  url_for(:action => :show, :view_states => true, :id => model.id), :class => 'to-modal small-modal', :title => 'View Workflow', 'data-on-success' => 'refreshCaller')

                  -#TODO AML: Should we automatically provide a link to the detail card for any related models

                  %td{:nowrap => 1}= val

  #card-footer= raw(fluxx_paginate(@models) || '<div class="no-pagination">' + pluralize(@models.length, "Entry") + '</div>')
  = render :partial => 'insta/card_settings'
