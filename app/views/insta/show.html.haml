- if @skip_wrapper
  = render :partial => @markup,  :locals => {:model => @model}
- else
  %div{:id=>"card-header"}= raw "#{raw flash_info} #{raw flash_error}"

  %div{:id=>"card-body"}
    %div.show
      = render :partial => @markup, :locals => { :model => @model }
  - if !@skip_card_footer
    - if @related && ! @exclude_related_data
      %ol{:id=>"card-drawer"}
        - @related.each do |rd|
          - if rd[:display_name]
            %li.section
              - if rd[:lazy_load_url]
                %span.label{:class => "lazy-load", "data-src".to_sym => rd[:lazy_load_url]}
                  = rd[:display_name]
                %ol.entries
              - else
                %span.label= rd[:display_name]
                %ol.entries
                  - rd[:formatted_data].each do |element|
                    - section_title = if element[:display_template]
                      - render :partial => element[:display_template], :locals => {:model => element[:model]}
                    - else
                      - element[:model].to_s
                    %li.entry
                      = link_to((element[:model_url] || element[:model]), :class => 'new-detail', 'data-insert' => 'after', 'title' => truncate(element[:title], :length => 45)) do
                        %span= section_title
    %div{:id=>"card-footer"}
      - if @footer_template
        = render :partial => @footer_template, :locals => { :model => @model}
      - else
        %ul.buttons
          - if @model
            - if !current_user.respond_to?(:has_update_for_model) || current_user.has_update_for_model?(@model)
              %li= link_to 'Edit', current_edit_path(@model.id), :class => 'to-self', :link_class => 'btn'
            - if (!current_user.respond_to?(:has_delete_for_model) || current_user.has_delete_for_model?(@model)) && (!@model.respond_to?(:can_delete?) || @model.can_delete?)
              %li= link_to 'Delete', current_delete_path(@model.id), :class => 'as-delete', 'data-on-success' => 'refreshCaller', :link_class => 'btn'
            - if @model.respond_to?(:is_favorite_for?)
              - favorite = @model.is_favorite_for? current_user
              - if favorite
                %li= link_to 'Remove Favorite', favorite, {:class => 'as-delete no-confirm', 'data-on-success' => 'refreshCaller'}
              - else
                %li= link_to 'Add As Favorite', favorites_path(:favorite => {:user_id => current_user.id, :favorable_id => @model.id, :favorable_type => @model.class}), {:class => 'as-post', 'data-on-success' => 'refreshCaller'}
            %li= link_to 'Printable', '#', :target => "_blank", :class => 'btn area-url' if Fluxx.config(:show_printable_button) == "1"
            %li= link_to('PDF', '#', :target => "_blank", :class => 'btn area-url pdf') if Fluxx.config(:show_pdf_button) == "1"
            - if @extra_buttons
              - @extra_buttons.each do |button|
                %li= link_to button[:name], button[:path], :class => "btn #{button[:class]}"

    = render :partial => 'insta/card_settings'