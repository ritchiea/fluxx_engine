<div id="new-form">
  <%- form_definition.each do |form_fieldset| 
    if field_editable?(model, form_fieldset) && ((form_fieldset[:current_user] ? current_user.id == model.id : true) || (form_fieldset[:role] ? current_user.has_role?(form_fieldset[:role], User) : true))
    -%>
    <% if !form_fieldset[:name].empty? && form_fieldset[:name] != '&nbsp;' %>
    <h2><%= form_fieldset[:name] %></h2>
    <% end %>
    <%- form.inputs do -%>
  	     
  		<%- form_fieldset[:fields].each do |field| 
  		   if field.is_a? Hash
  		     if field[:type] && field[:type][:name] == :partial
  		       -%>
  		       <%= render :partial => field[:type][:partial], :locals => { :form => form, :model => model, :editable => field_editable?(model, field)} %>
  		 <%- elsif field[:type] && field[:type][:name] == :address
             address_label = field[:type][:label]
             address_prefix = field[:type][:prefix]
  		       address_prefix = address_prefix.to_s if address_prefix
  		  -%>
	           <%= render :partial => 'insta/address_form', :locals => { :form => form, :model => model, :address_prefix => address_prefix, :address_label => address_label, :editable => field_editable?(model, field)} %>
 		   <%- elsif field[:type] && field[:type][:name] == :file -%>
             <%= form.input field[:name], :as => :file, :value => '', :input_html => {:disabled => disabled_value(model, field), :class => field[:class]} %>
 		   <%- elsif field[:type] && field[:type][:name] == :select_transfer 
           label_text = field[:label] || "#{humanize_field_name(field[:name])}:"
           label_class = field[:label_class] || nil
 		    -%>
	          
             <%= form.input field[:name], :label => label_text, :as => :select_transfer, :input_html => {:disabled => disabled_value(model, field), :class => field[:class], :label_class => label_class} %>
		    <%- else 
		      label_text = field[:label] || "#{humanize_field_name(field[:name])}:"
		      as_field = field[:type] && field[:type][:name]
		      -%>
  	         <%= form.input field[:name], :id => (field[:random_id] ? (rand * 999999999).to_i : nil), :label => label_text, :as => as_field, :input_html => {:disabled => disabled_value(model, field), :class => field[:class], :placeholder => field[:placeholder]}, :label_html => {:class => field[:label_class]}%>
  	  <%-   end
  	     elsif field.to_s == 'password_confirmation' -%>
	        <%= form.input field, :as => :password, :value => '', :label => "Password Confirmation:", :input_html => {:disabled => disabled_value(model, field), :class => field[:class]} %>
   	  <%- elsif field.is_a? Symbol -%>
 	        <%= form.input field, :label => "#{humanize_field_name(field).titlecase}:" %>
  	    <%- end -%>
  	  <%- end -%>
      
  	<%- end -%>
	<%- end -%>
	<%- end -%>
  <%- button_text = "#{button_verb} #{button_definition}" -%>
  <%= form.commit_button button_text unless @not_editable %>
</div>
